/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rpg.Frames;

import java.util.ArrayList;
import java.util.Arrays;
import rpg.Controllers.Game;
import rpg.Controllers.ThaoAcademy;
import rpg.Databases.*;

/**
 *
 * @author Christian
 */
public class Towns extends javax.swing.JFrame {
    private int townID;
    private int locationID;
    private ArrayList<String> mapItems = new ArrayList<String>();
    private static ThaoAcademy thaoAcademy = new ThaoAcademy();
    private final static String[] NAME = {
        "Thao Academy Entrance",
        "Thao Academy Courtyard",
        "Thao Academy Dormitory",
        "Thao Academy Cafeteria",
        "Thao Academy Teleporter",
        "Thao Academy Marketplace"
    };
    private final static String[] DESCRIPTION = {
        "A great wooden gate stands open. You can see many students pass "
            + "you on their way inside.",
        "A nice courtyard with a large fountain in the middle of it. You "
            + "can see students and staff walking around.",
        "A large stone building with a warm red paint and many windows "
            + "are visible, some of them closed off with curtains.",
        "A decent sized cafeteria with a rather overpowering smell of "
            + "slightly greasy food.",
        "A mystic design is etched into the floor behind a sturdy wooden "
            + "barrier. A teacher stand in front of the gate.",
        "A small marketplace with only a few shops. Clearly not meant "
            + "for more than a quick resupply location."
    };
    
    public static String getName(int which) {
        return NAME[which];
    }
    public static String getDesc(int which) {
        return DESCRIPTION[which];
    }
    
    /**
     * Creates new form Towns
     */
    public Towns(int number) {
        this.setLocation(350, 200);
        this.townID = number;
        initComponents();
        map.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameHolder = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        pauseButton = new javax.swing.JButton();
        dayVar = new javax.swing.JLabel();
        timeVar = new javax.swing.JLabel();
        mapButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        optionButton1 = new javax.swing.JButton();
        optionButton2 = new javax.swing.JButton();
        optionButton3 = new javax.swing.JButton();
        actionButton = new javax.swing.JButton();
        map = new javax.swing.JPanel();
        locationList = new javax.swing.JComboBox();
        submitButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thao Academy Entrance");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        pauseButton.setText("Pause");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        dayVar.setText("jLabel1");

        timeVar.setText("jLabel2");

        mapButton.setText("Map");
        mapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayVar)
                .addGap(72, 72, 72)
                .addComponent(timeVar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(mapButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pauseButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(pauseButton)
                .addComponent(dayVar)
                .addComponent(timeVar)
                .addComponent(mapButton))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        display.setColumns(20);
        display.setLineWrap(true);
        display.setRows(5);
        display.setWrapStyleWord(true);
        jScrollPane1.setViewportView(display);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        optionButton1.setText("Talk");
        optionButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionButton1ActionPerformed(evt);
            }
        });

        optionButton2.setText("Look Around");
        optionButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionButton2ActionPerformed(evt);
            }
        });

        optionButton3.setText("Wait");
        optionButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionButton3ActionPerformed(evt);
            }
        });

        actionButton.setText("Action");
        actionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frameHolderLayout = new javax.swing.GroupLayout(frameHolder);
        frameHolder.setLayout(frameHolderLayout);
        frameHolderLayout.setHorizontalGroup(
            frameHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, frameHolderLayout.createSequentialGroup()
                        .addGroup(frameHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(optionButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(optionButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(optionButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        frameHolderLayout.setVerticalGroup(
            frameHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frameHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frameHolderLayout.createSequentialGroup()
                        .addComponent(optionButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(actionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mapLayout = new javax.swing.GroupLayout(map);
        map.setLayout(mapLayout);
        mapLayout.setHorizontalGroup(
            mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(locationList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(mapLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(submitButton)
                .addGap(18, 18, 18)
                .addComponent(backButton)
                .addContainerGap(143, Short.MAX_VALUE))
        );
        mapLayout.setVerticalGroup(
            mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(locationList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(backButton))
                .addGap(97, 97, 97))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(map, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(map, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapButtonActionPerformed
        frameHolder.setVisible(false);
        switch (townID) {
            case 0:
                this.setMapItems(townID);
                map.setVisible(true);
        }
    }//GEN-LAST:event_mapButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        AkashicTrials.pause.setPrevious(this);
        AkashicTrials.pause.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void optionButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionButton1ActionPerformed
        switch (townID) {
            case 0:
                this.updateAll();
                display.append(thaoAcademy.getTalk(locationID));
                break;
        }
    }//GEN-LAST:event_optionButton1ActionPerformed

    private void optionButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionButton2ActionPerformed
        this.updateAll();
    }//GEN-LAST:event_optionButton2ActionPerformed

    private void optionButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionButton3ActionPerformed
        Game.time++;
        this.updateAll();
    }//GEN-LAST:event_optionButton3ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.updateAll();
        map.setVisible(false);
        frameHolder.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        int location = locationList.getSelectedIndex();
        locationID = location;
        switch (townID) {
            case 0:
                this.updateAll();
                break;
            case 1:
                this.updateAll();
                break;
            case 2:
                this.updateAll();
                break;
            case 3:
                this.updateAll();
                break;
            case 4:
                this.updateAll();
                break;
            case 5:
                this.updateAll();
                break;
        }
        map.setVisible(false);
        frameHolder.setVisible(true);
    }//GEN-LAST:event_submitButtonActionPerformed

    private void actionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionButtonActionPerformed
        switch (townID) {
            case 0:
                switch (locationID) {
                    case 0:
                        this.setVisible(false);
                        AkashicTrials.outside.setVisible(true);
                        break;
                    case 1:
                        this.updateAll();
                        display.append("\n\nThere is nothing to do here!");
                        break;
                    case 2:
                        thaoAcademy.room();
                        this.updateAll();
                        display.append("\n\nYou went to sleep for 8 hours...");
                        break;
                    case 3-5:
                        this.updateAll();
                        display.append("\n\nThere is nothing to do here!");
                        break;
                }
                break;
        }
    }//GEN-LAST:event_actionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Thao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Thao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Thao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Thao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Towns(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionButton;
    private javax.swing.JButton backButton;
    public javax.swing.JLabel dayVar;
    public javax.swing.JTextArea display;
    private javax.swing.JPanel frameHolder;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox locationList;
    private javax.swing.JPanel map;
    private javax.swing.JButton mapButton;
    public javax.swing.JButton optionButton1;
    public javax.swing.JButton optionButton2;
    public javax.swing.JButton optionButton3;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton submitButton;
    public javax.swing.JLabel timeVar;
    // End of variables declaration//GEN-END:variables

    private void setMapItems(int townID) {
        switch (townID) {
            case 0:
                locationList.removeAllItems();
                locationList.addItem("Thao Academy Entrance");
                locationList.addItem("Thao Academy Courtyard");
                locationList.addItem("Thao Academy Dormitory");
                locationList.addItem("Thao Academy Cafeteria");
                locationList.addItem("Thao Academy Teleporter");
                locationList.addItem("Thao Academy Marketplace");
        }
    }

    public String convertDay(int day) {
        return "Day: " + day;
    }

    public String convertTime(int time) {
        return "Time: " + time;
    }
    
    private void updateAll() {
        this.setTitle(this.getName(locationID));
        display.setText(this.getDesc(locationID));
        dayVar.setText(this.convertDay(Game.day));
        timeVar.setText(this.convertTime(Game.time));
    }
}
